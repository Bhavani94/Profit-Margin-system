//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ProfitProEntities : DbContext
    {
        public ProfitProEntities()
            : base("name=ProfitProEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Tbl_Associate> Tbl_Associate { get; set; }
        public DbSet<Tbl_Associatelogin> Tbl_Associatelogin { get; set; }
        public DbSet<Tbl_ContractTerms> Tbl_ContractTerms { get; set; }
        public DbSet<Tbl_ExpenseReports> Tbl_ExpenseReports { get; set; }
    
        public virtual int usp_addTime(Nullable<int> timesheetID, Nullable<int> projectID, string activity, string datee, Nullable<double> hourss)
        {
            var timesheetIDParameter = timesheetID.HasValue ?
                new ObjectParameter("TimesheetID", timesheetID) :
                new ObjectParameter("TimesheetID", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var activityParameter = activity != null ?
                new ObjectParameter("Activity", activity) :
                new ObjectParameter("Activity", typeof(string));
    
            var dateeParameter = datee != null ?
                new ObjectParameter("Datee", datee) :
                new ObjectParameter("Datee", typeof(string));
    
            var hourssParameter = hourss.HasValue ?
                new ObjectParameter("hourss", hourss) :
                new ObjectParameter("hourss", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_addTime", timesheetIDParameter, projectIDParameter, activityParameter, dateeParameter, hourssParameter);
        }
    
        public virtual ObjectResult<usp_displayExpenses_Result> usp_displayExpenses(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_displayExpenses_Result>("usp_displayExpenses", projectIDParameter);
        }
    
        public virtual ObjectResult<usp_displayTotalExpense_Result> usp_displayTotalExpense(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_displayTotalExpense_Result>("usp_displayTotalExpense", projectIDParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> usp_impbysalary(Nullable<int> salary)
        {
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("usp_impbysalary", salaryParameter);
        }
    
        public virtual int usp_insExpenses(Nullable<int> projectID, Nullable<int> associateID, string expenseType, string expenseDate, Nullable<decimal> amount, string currency, string descr)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var associateIDParameter = associateID.HasValue ?
                new ObjectParameter("AssociateID", associateID) :
                new ObjectParameter("AssociateID", typeof(int));
    
            var expenseTypeParameter = expenseType != null ?
                new ObjectParameter("ExpenseType", expenseType) :
                new ObjectParameter("ExpenseType", typeof(string));
    
            var expenseDateParameter = expenseDate != null ?
                new ObjectParameter("ExpenseDate", expenseDate) :
                new ObjectParameter("ExpenseDate", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var descrParameter = descr != null ?
                new ObjectParameter("Descr", descr) :
                new ObjectParameter("Descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_insExpenses", projectIDParameter, associateIDParameter, expenseTypeParameter, expenseDateParameter, amountParameter, currencyParameter, descrParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_ProfitMargin(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_ProfitMargin", projectIDParameter);
        }
    
        public virtual ObjectResult<string> usp_selectdesignation(string associateID)
        {
            var associateIDParameter = associateID != null ?
                new ObjectParameter("AssociateID", associateID) :
                new ObjectParameter("AssociateID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_selectdesignation", associateIDParameter);
        }
    
        public virtual ObjectResult<string> usp_ShowName(string associateID)
        {
            var associateIDParameter = associateID != null ?
                new ObjectParameter("AssociateID", associateID) :
                new ObjectParameter("AssociateID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_ShowName", associateIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_TotalProfit(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_TotalProfit", projectIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Validate(string associateID, string aPassword)
        {
            var associateIDParameter = associateID != null ?
                new ObjectParameter("AssociateID", associateID) :
                new ObjectParameter("AssociateID", typeof(string));
    
            var aPasswordParameter = aPassword != null ?
                new ObjectParameter("APassword", aPassword) :
                new ObjectParameter("APassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Validate", associateIDParameter, aPasswordParameter);
        }
    
        public virtual ObjectResult<usp_viewProject_Result> usp_viewProject(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_viewProject_Result>("usp_viewProject", projectIDParameter);
        }
    
        public virtual ObjectResult<usp_viewTimesheet_Result> usp_viewTimesheet(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_viewTimesheet_Result>("usp_viewTimesheet", projectIDParameter);
        }
    }
}
